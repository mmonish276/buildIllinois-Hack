from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
from datetime import datetime, timedelta
from selenium.common.exceptions import StaleElementReferenceException
import pandas as pd
import re

date = datetime(2024, 10, 26)
count = 0


# Set the path to the Chromedriver
DRIVER_PATH = 'C:\\Users\\adamo\\Downloads\\chromedriver-win64\\chromedriver-win64\\chromedriver.exe'
service = Service(DRIVER_PATH)
driver = webdriver.Chrome(service=service)
driver.get('https://eatsmart.housing.illinois.edu/NetNutrition/46')

# Variables
macrosFull = []
data = []

def refresh():
    global elements, rows, currBlocks, links
    elements = WebDriverWait(driver, 2).until(
        EC.visibility_of_all_elements_located((By.ID, 'menuPanel'))
    )
    for element in elements:
        rows = element.find_elements(By.CLASS_NAME, 'MenuList')
        for row in rows:
            currBlocks = row.find_elements(By.CLASS_NAME, 'col-12')
            for block in currBlocks:
                links = block.find_elements(By.CLASS_NAME, 'cbo_nn_menuLink')

# Initial Navigation
element = WebDriverWait(driver, 1).until(
    EC.visibility_of_element_located((By.LINK_TEXT, 'Illinois Street Dining Center (ISR)'))
)
driver.execute_script("arguments[0].scrollIntoView();", element)
driver.execute_script("arguments[0].click();", element)

element = WebDriverWait(driver, 1).until(
    EC.visibility_of_element_located((By.LINK_TEXT, 'Grillworks'))
)
driver.execute_script("arguments[0].scrollIntoView();", element)
driver.execute_script("arguments[0].click();", element)

# Loop to gather data
for i in range(27):
    for k in range(2):
        refresh()
        links = currBlocks[i].find_elements(By.CLASS_NAME, 'cbo_nn_menuLink')
        driver.execute_script("arguments[0].scrollIntoView();", links[k])
        driver.execute_script("arguments[0].click();", links[k])

        try:
            dropdowns = WebDriverWait(driver, 2).until(
                EC.visibility_of_all_elements_located((By.CLASS_NAME, 'js-collapse-icon.pl-2.fa.fa-caret-right'))
            )
            for dropdown in dropdowns:
                driver.execute_script("arguments[0].scrollIntoView();", dropdown)
                driver.execute_script("arguments[0].click();", dropdown)
                time.sleep(1)
        except:
            pass

        items = WebDriverWait(driver, 5).until(
            EC.visibility_of_all_elements_located((By.CLASS_NAME, 'cbo_nn_itemHover'))
        )

        for item in items:
            driver.execute_script("arguments[0].scrollIntoView();", item)
            driver.execute_script("arguments[0].click();", item)
            time.sleep(0.5)

            try:
                table = WebDriverWait(driver, 2).until(
                    EC.presence_of_element_located((By.XPATH, '//*[@id="nutritionLabel"]/div/div/table'))
                )

                # Re-fetch `macrosFull` every time to avoid stale elements
                headers = table.find_elements(By.CLASS_NAME, 'cbo_nn_LabelBorderedSubHeader')
                headers.append(driver.find_element(By.CLASS_NAME, 'cbo_nn_LabelHeader'))
                headers.append(driver.find_element(By.CLASS_NAME, 'cbo_nn_LabelBottomBorderLabel'))
                headers.append(date)
                if(count == 2):
                     headers.append('dinner')
                elif(count == 1):
                     headers.append('lunch')
                else:
                    headers.append('breakfast')
                try:
                        nutrients = {
                            'calories': re.findall(r'\d+', headers[0].text)[0],
                            'Total Fat': re.findall(r'\d+', headers[1].text)[0],
                            'Saturated Fat': re.findall(r'\d+', headers[2].text)[0], 
                            'Trans Fat': re.findall(r'\d+', headers[3].text.replace("NA", "0"))[0],
                            'Polyunsaturated Fat': re.findall(r'\d+', headers[4].text.replace("NA", "0"))[0],
                            'Monounsaturated Fat': re.findall(r'\d+', headers[5].text.replace("NA", "0"))[0],
                            'Cholestrol': re.findall(r'\d+', headers[6].text)[0],
                            'Sodium': re.findall(r'\d+', headers[7].text)[0],
                            'Potassium': re.findall(r'\d+', headers[8].text.replace("NA", "0"))[0],
                            'Total Carbs': re.findall(r'\d+', headers[9].text)[0],
                            'Fiber': re.findall(r'\d+', headers[10].text.replace("NA", "0"))[0],
                            'Sugar': re.findall(r'\d+', headers[11].text.replace("NA", "0"))[0],
                            'Protein': re.findall(r'\d+', headers[12].text)[0],
                            'Name': headers[13].text,
                            'Serving Size': headers[14].text,
                            'Date': headers[15],
                            'Meal': headers[16]
                        }
                        print(nutrients)
                        data.append(nutrients)
                except:
                        # Retry fetching text if stale
                        pass

            except StaleElementReferenceException:
                print("Table elements became stale. Skipping this item.")

            close = WebDriverWait(driver, 9).until(
                EC.visibility_of_element_located((By.ID, 'btn_nn_nutrition_close'))
            )
            driver.execute_script("arguments[0].scrollIntoView();", close)
            driver.execute_script("arguments[0].click();", close)
            time.sleep(1)
        
        back = WebDriverWait(driver, 2).until(
            EC.visibility_of_element_located((By.ID, 'btn_Back*Menu Item Details'))
        )
        driver.execute_script("arguments[0].scrollIntoView();", back)
        driver.execute_script("arguments[0].click();", back)
        count += 1
    date += timedelta(days = 1)
    count = 0


df= pd.DataFrame(data)
print(df)
df.to_csv('C:\\Users\\adamo\\Downloads\\grillworks_final.csv', index = False)


driver.quit()
